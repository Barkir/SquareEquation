digraph "all_test_init"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="all_test_init",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="a function for running all tests"];
  Node1 -> Node2 [id="edge12_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="color_printf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$color__printf_8cpp.html#a7c074de3badf5ee9989edbb64d6b3ec2",tooltip="main function for printing colorful text (works like fprintf() but has a color as an arg)"];
  Node2 -> Node3 [id="edge13_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="choose_color",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$color__printf_8cpp.html#a931e0d552b91322e02167b6261de8596",tooltip="a function for converting enum color value to string (esc sequence)"];
  Node1 -> Node4 [id="edge14_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="test_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$testing_8cpp.html#a08b2026795d206b857c96e7453965963",tooltip="a function for running a single test"];
  Node4 -> Node2 [id="edge15_Node000004_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node5 [id="edge16_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="is_equal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#a5cf9cf5e86c145a2bc103e94d0eb54db",tooltip="a function for comparing two dobule numbers (equal or not?)"];
  Node4 -> Node6 [id="edge17_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="solve_square_equation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#adb544ab94d3a5fa092f9e9eab7480cb9",tooltip="a function for solving square equation"];
  Node6 -> Node7 [id="edge18_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="discriminant",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#a2876dcc4846e2235854a720d47131b88",tooltip="a function for solving discriminant"];
  Node6 -> Node8 [id="edge19_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="interchange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#ac44fe699bcba20ea6e1d9610de04ec15",tooltip="a function for interchanging the values of two numbers"];
  Node6 -> Node9 [id="edge20_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="is_null",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#a247978824ef960d655ab771781bbbcfa",tooltip="a function for comparing double number with null"];
  Node6 -> Node10 [id="edge21_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="solve_linear_equation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#a68e3792d06ce7da11a042243ec03916f",tooltip="a function for solving a linear equation"];
  Node10 -> Node9 [id="edge22_Node000010_Node000009",color="steelblue1",style="solid",tooltip=" "];
}
